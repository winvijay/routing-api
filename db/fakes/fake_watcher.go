// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/coreos/etcd/Godeps/_workspace/src/golang.org/x/net/context"
	"github.com/coreos/etcd/client"
)

type FakeWatcher struct {
	NextStub        func(context.Context) (*client.Response, error)
	nextMutex       sync.RWMutex
	nextArgsForCall []struct {
		arg1 context.Context
	}
	nextReturns struct {
		result1 *client.Response
		result2 error
	}
}

func (fake *FakeWatcher) Next(arg1 context.Context) (*client.Response, error) {
	fake.nextMutex.Lock()
	fake.nextArgsForCall = append(fake.nextArgsForCall, struct {
		arg1 context.Context
	}{arg1})
	fake.nextMutex.Unlock()
	if fake.NextStub != nil {
		return fake.NextStub(arg1)
	} else {
		return fake.nextReturns.result1, fake.nextReturns.result2
	}
}

func (fake *FakeWatcher) NextCallCount() int {
	fake.nextMutex.RLock()
	defer fake.nextMutex.RUnlock()
	return len(fake.nextArgsForCall)
}

func (fake *FakeWatcher) NextArgsForCall(i int) context.Context {
	fake.nextMutex.RLock()
	defer fake.nextMutex.RUnlock()
	return fake.nextArgsForCall[i].arg1
}

func (fake *FakeWatcher) NextReturns(result1 *client.Response, result2 error) {
	fake.NextStub = nil
	fake.nextReturns = struct {
		result1 *client.Response
		result2 error
	}{result1, result2}
}

var _ client.Watcher = new(FakeWatcher)
